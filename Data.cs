using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DiceRPG
{
    public static class Data
    {
        public static char[,] map;
        public static List<Monster> monsters;

        public static void Init()
        {
            monsters = new List<Monster>();
        }


        public static bool ObjectInPos(Position pos)
        {
            return MonsterInPos == null;
        }
        public static Monster MonsterInPos(Position pos)
        {
            foreach(Monster monster in monsters)
            {
                if(monster.pos.x == pos.x && monster.pos.y == pos.y)
                {
                    return monster;
                }
            }

            return null;
        }

        public static void BasicMap()
        {
            map = new char[,]
            {
            {'#','#','#','#','#'},
            {'#',' ',' ',' ','#'},
            {'#',' ',' ',' ','#'},
            {'#',' ',' ','#','#'},
            {'#',' ',' ','#','#'},
            {'#',' ',' ',' ','#'},
            {'#','#','#','#','#'}
            };
            Player.GetInstance.pos = new Position(1, 1);


            Monster jery1 = new Jery();
            jery1.pos = new Position(3,2);
            monsters.Add(jery1);

            Monster wimson1 = new Wimson();
            wimson1.pos = new Position(2,5);
            monsters.Add(wimson1);

            Monster greatdog1 = new GreatDog();
            greatdog1.pos = new Position(2, 3);
            monsters.Add(greatdog1);
        }

        public static void Level1()
        {
            map = new char[,]
            {
            //1   2   3   4   5   6   7   8   9   10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39                INDEX = 위치 - 1
            {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},//1
            {'#','#','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#'},//2
            {'#','#','#',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ','#'},//3
            {'#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ','#','#','#','#','#',' ','#'},//4
            {'#',' ','#',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ','#',' ','#'},//5
            {'#',' ',' ',' ','#','#',' ',' ','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#',' ',' ',' ','#',' ','#'},//6
            {'#',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#','#',' ','#'},//7
            {'#',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#','#','#',' ','#'},//8
            {'#',' ','#',' ','#',' ',' ','#','#',' ',' ',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ','#','#',' ','#'},//9
            {'#',' ','#',' ','#',' ',' ','#','#',' ',' ',' ',' ','#','#','#',' ',' ','#','#',' ','#',' ',' ',' ',' ',' ',' ','#',' ','#',' ',' ','#','#','#','#',' ','#'},//10
            {'#',' ',' ',' ','#',' ',' ','#','#',' ',' ',' ','#','#','#','#',' ',' ','#',' ',' ','#','#','#','#',' ','#','#',' ',' ','#',' ',' ',' ',' ','#','#',' ','#'},//11
            {'#',' ',' ',' ','#',' ',' ','#','#',' ',' ',' ','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ','#'},//12
            {'#',' ',' ',' ','#',' ',' ','#',' ',' ',' ',' ','#','#','#','#','#',' ',' ',' ','#','#','#',' ',' ',' ',' ',' ',' ',' ','#',' ',' ','#',' ','#',' ',' ','#'},//13
            {'#',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#','#',' ',' ','#','#','#','#',' ','#'},//14
            {'#',' ',' ','#','#',' ',' ',' ',' ',' ',' ',' ','#','#','#','#','#','#',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','#',' ',' ',' ',' ',' ',' ',' ','#'},//15
            {'#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#','#'},//16
            };

            Player.GetInstance.pos = new Position(1, 14);

            Monster undyne = new Undyne();
            undyne.pos = new Position(1, 12);
            undyne.GetDamage = 1;
            monsters.Add(undyne);

            Monster jery1 = new Jery();
            jery1.pos = new Position(3, 2);
            monsters.Add(jery1);

            Monster wimson1 = new Wimson();
            wimson1.pos = new Position(19, 2);
            monsters.Add(wimson1);

            Monster greatdog1 = new GreatDog();
            greatdog1.pos = new Position(37, 14);
            monsters.Add(greatdog1);
        }
    }
}
